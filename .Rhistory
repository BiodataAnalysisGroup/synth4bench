mat <- matrix(rnorm(n*m*g, mu, sigma), m, n*g)
rownames(mat) <- paste0("gene", seq_len(m))
colnames(mat) <- paste0("cell", seq_len(n*g))
group <- factor(sapply(seq_len(g),
function(x) { rep(paste0("group", x), n)}
))
names(group) <- colnames(mat)
mu_upreg <- 6
sigma_upreg <- 10
deg <- 100
for (i in seq_len(g)) {
mat[(deg*(i-1) + 1):(deg*i), group == paste0("group", i)] <-
mat[1:deg, group==paste0("group", i)] + rnorm(deg, mu_upreg, sigma_upreg)
}
# positive expression only
mat[mat < 0] <- 0
x_train <- as.matrix(t(mat))
# heatmap
heatmap(mat, Rowv = NA, Colv = NA,
col = colorRampPalette(c('green', 'red'))(100),
scale = "none")
# model parameters
batch_size <- 32
original_dim <- 1000
intermediate_dim <- 512
epochs <- 100
# VAE
vae_result <- fit_vae(x_train = x_train, x_val = x_train,
encoder_layers = list(layer_input(shape = c(original_dim)),
layer_dense(units = intermediate_dim,
activation = "relu")),
decoder_layers = list(layer_dense(units = intermediate_dim,
activation = "relu"),
layer_dense(units = original_dim,
activation = "sigmoid")),
epochs = epochs, batch_size = batch_size,
use_generator = FALSE,
callbacks = keras::callback_early_stopping(
monitor = "val_loss",
patience = 10,
restore_best_weights = TRUE))
restart_session
restart_session()
install.packages("remotes")
remotes::install_github("rstudio/tensorflow")
remotes::install_github("rstudio/tensorflow")
library(tensorflow)
install_tensorflow(version = "2.0.0b1", method = "conda", envname = "r-reticulate")
library(reticulate)
install_tensorflow(version = "2.0.0b1", method = "conda", envname = "r-reticulate")
library(reticulate)
path_to_python <- install_python()
virtualenv_create("r-tensorflow", python = path_to_python)
library(tensorflow)
install_tensorflow(envname = "r-tensorflow")
use_virtualenv("r-tensorflow")
detach("package:base", unload = TRUE)
library(base, lib.loc = "C:/Program Files/R/R-4.4.1/library")
library(appreci8R)
library(data.table)
install.packages(c("stringr", "data.table", "vcfR", "ggplot2", "ggvenn", "ggforce", "ggsci", "patchwork"))
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("appreci8R")
BiocManager::install("GenomicRanges")
BiocManager::install("GenomicRanges")
library(GenomicRanges)
library(GenomicRanges)
library(data.table)
library(stringr)
library(vcfR)
library(ggplot2)
library(ggforce)
library(ggsci)
library(ggvenn)
library(patchwork)
library(optparse)
library(GenomicAlignments)
library(Rsamtools)
library(seqinr)
BiocManager::install()
BiocManager::install()
install.packages(c("bit", "RSQLite"))
setwd("C:/Users/sfragkoul/Desktop/synth4bench")
BiocManager::install()
install.packages("cpp11")
BiocManager::install()
runs = c(1,2,3,4,5,6,7,8,9,10)
for(r in runs) {
r=1
folder = "."
merged_file = "Merged"
a <- paste0(folder, "/", r, "/", r, "_report.tsv") |>
readLines() |>
str_split(pattern = "\t", simplify = TRUE) |>
as.data.frame() |>
setDT()
a$V1 = NULL
# a$V3 = NULL
a$V5 = NULL
colnames(a) = c("POS", "REF", "DP", paste0("Nt_", 1:(ncol(a) - 3)))
a = melt(
a, id.vars = c("POS", "REF", "DP"),
variable.factor = FALSE, value.factor = FALSE,
variable.name = "Nt", value.name = "Count"
)
a = a[which(Count != "")]
a$POS = as.numeric(a$POS)
a$DP = as.numeric(a$DP)
a$Nt = str_split_i(a$Count, "\\:", 1)
a$Count = str_split_i(a$Count, "\\:", 2) |>
as.numeric()
a$Freq = round(100 * a$Count / a$DP, digits = 6)
a = a[order(POS, -Count)]
a = a[which(REF != a$Nt & Count != 0)]
b = a[which(Nt %in% c("A", "C", "G", "T")), ]
nt_runs[[ as.character(r) ]] = b
}
source("R/libraries.R")
nt_runs = list()
r=1
r=1
#folder = "."
#merged_file = "Merged"
a <- paste0(folder, "/", r, "/", r, "_report.tsv") |>
readLines() |>
str_split(pattern = "\t", simplify = TRUE) |>
as.data.frame() |>
setDT()
folder = "D:/sfragkoul/Synth_Data/Synthesizers/NEAT/testing/TP53/coverage_test/"
a <- paste0(folder, "/", r, "/", r, "_report.tsv") |>
readLines() |>
str_split(pattern = "\t", simplify = TRUE) |>
as.data.frame() |>
setDT()
folder = "D:/sfragkoul/Synth_Data/Synthesizers/NEAT/testing/TP53/coverage_test"
r=1
#folder = "."
#merged_file = "Merged"
a <- paste0(folder, "/", r, "/", r, "_report.tsv") |>
readLines() |>
str_split(pattern = "\t", simplify = TRUE) |>
as.data.frame() |>
setDT()
folder = "D:/sfragkoul/Synth_Data/Synthesizers/NEAT/testing/TP53/coverage_test/300_30_10"
r=1
#folder = "."
#merged_file = "Merged"
a <- paste0(folder, "/", r, "/", r, "_report.tsv") |>
readLines() |>
str_split(pattern = "\t", simplify = TRUE) |>
as.data.frame() |>
setDT()
a$V1 = NULL
# a$V3 = NULL
a$V5 = NULL
colnames(a) = c("POS", "REF", "DP", paste0("Nt_", 1:(ncol(a) - 3)))
a = melt(
a, id.vars = c("POS", "REF", "DP"),
variable.factor = FALSE, value.factor = FALSE,
variable.name = "Nt", value.name = "Count"
)
a = a[which(Count != "")]
a$POS = as.numeric(a$POS)
a$DP = as.numeric(a$DP)
a$Nt = str_split_i(a$Count, "\\:", 1)
a$Count = str_split_i(a$Count, "\\:", 2) |>
as.numeric()
a$Freq = round(100 * a$Count / a$DP, digits = 6)
a = a[order(POS, -Count)]
a = a[which(REF != a$Nt & Count != 0)]
b = a[which(Nt %in% c("A", "C", "G", "T")), ]
nt_runs[[ as.character(r) ]] = b
View(nt_runs)
nt_runs = rbindlist(nt_runs, idcol = "Run")
pos_of_interest = nt_runs[which(Freq == 100)]$POS |> unique()
gt_runs = nt_runs[which(POS %in% pos_of_interest)]
a <- paste0(folder, "/", merged_file , "_report.tsv") |>
readLines() |>
str_split(pattern = "\t", simplify = TRUE) |>
as.data.frame() |>
setDT()
a$V1 = NULL
# a$V3 = NULL
a$V5 = NULL
colnames(a) = c("POS", "REF", "DP", paste0("Nt_", 1:(ncol(a) - 3)))
a = melt(
a, id.vars = c("POS", "REF", "DP"),
variable.factor = FALSE, value.factor = FALSE,
variable.name = "Nt", value.name = "Count"
)
a = a[which(Count != "")]
a$POS = as.numeric(a$POS)
a$DP = as.numeric(a$DP)
a$Nt = str_split_i(a$Count, "\\:", 1)
a$Count = str_split_i(a$Count, "\\:", 2) |>
as.numeric()
a$Freq = round(100 * a$Count / a$DP, digits = 6)
a = a[order(POS, -Count)]
a = a[which(REF != a$Nt & Count != 0)]
b = a[which(Nt %in% c("A", "C", "G", "T")), ]
merged_gt = b[which(POS %in% gt_runs$POS)]
#merged_gt1 <- merge(b, gt_runs, by = c("POS", "REF", "Nt")) #ΝEW!!!!!!!
View(merged_gt)
merged_gt1 <- merge(b, gt_runs, by = c("POS", "REF", "Nt")) #ΝEW!!!!!!!
View(merged_gt1)
r=1
#folder = "."
#merged_file = "Merged"
a <- paste0(folder, "/", r, "/", r, "_report.tsv") |>
readLines() |>
str_split(pattern = "\t", simplify = TRUE) |>
as.data.frame() |>
setDT()
a$V1 = NULL
# a$V3 = NULL
a$V5 = NULL
colnames(a) = c("POS", "REF", "DP", paste0("Nt_", 1:(ncol(a) - 3)))
a = melt(
a, id.vars = c("POS", "REF", "DP"),
variable.factor = FALSE, value.factor = FALSE,
variable.name = "Nt", value.name = "Count"
)
a = a[which(Count != "")]
a$POS = as.numeric(a$POS)
a$DP = as.numeric(a$DP)
a$Nt = str_split_i(a$Count, "\\:", 1)
a$Count = str_split_i(a$Count, "\\:", 2) |>
as.numeric()
a$Freq = round(100 * a$Count / a$DP, digits = 6)
a = a[order(POS, -Count)]
a = a[which(REF != a$Nt & Count != 0)]
b = a[which(Nt %in% c("A", "C", "G", "T")), ]
nt_runs[[ as.character(r) ]] = b
r=2
#folder = "."
#merged_file = "Merged"
a <- paste0(folder, "/", r, "/", r, "_report.tsv") |>
readLines() |>
str_split(pattern = "\t", simplify = TRUE) |>
as.data.frame() |>
setDT()
a$V1 = NULL
# a$V3 = NULL
a$V5 = NULL
colnames(a) = c("POS", "REF", "DP", paste0("Nt_", 1:(ncol(a) - 3)))
a = melt(
a, id.vars = c("POS", "REF", "DP"),
variable.factor = FALSE, value.factor = FALSE,
variable.name = "Nt", value.name = "Count"
)
a = a[which(Count != "")]
a$POS = as.numeric(a$POS)
a$DP = as.numeric(a$DP)
a$Nt = str_split_i(a$Count, "\\:", 1)
a$Count = str_split_i(a$Count, "\\:", 2) |>
as.numeric()
a$Freq = round(100 * a$Count / a$DP, digits = 6)
a = a[order(POS, -Count)]
a = a[which(REF != a$Nt & Count != 0)]
b = a[which(Nt %in% c("A", "C", "G", "T")), ]
nt_runs[[ as.character(r) ]] = b
folder = "D:/sfragkoul/Synth_Data/Synthesizers/NEAT/testing/TP53/coverage_test/300_30_10"
merged_file = "Merged"
nt_runs = list()
r=1
#folder = "."
#merged_file = "Merged"
a <- paste0(folder, "/", r, "/", r, "_report.tsv") |>
readLines() |>
str_split(pattern = "\t", simplify = TRUE) |>
as.data.frame() |>
setDT()
a$V1 = NULL
# a$V3 = NULL
a$V5 = NULL
colnames(a) = c("POS", "REF", "DP", paste0("Nt_", 1:(ncol(a) - 3)))
a = melt(
a, id.vars = c("POS", "REF", "DP"),
variable.factor = FALSE, value.factor = FALSE,
variable.name = "Nt", value.name = "Count"
)
a = a[which(Count != "")]
a$POS = as.numeric(a$POS)
a$DP = as.numeric(a$DP)
a$Nt = str_split_i(a$Count, "\\:", 1)
a$Count = str_split_i(a$Count, "\\:", 2) |>
as.numeric()
a$Freq = round(100 * a$Count / a$DP, digits = 6)
a = a[order(POS, -Count)]
a = a[which(REF != a$Nt & Count != 0)]
b = a[which(Nt %in% c("A", "C", "G", "T")), ]
nt_runs[[ as.character(r) ]] = b
r=2
#folder = "."
#merged_file = "Merged"
a <- paste0(folder, "/", r, "/", r, "_report.tsv") |>
readLines() |>
str_split(pattern = "\t", simplify = TRUE) |>
as.data.frame() |>
setDT()
a$V1 = NULL
# a$V3 = NULL
a$V5 = NULL
colnames(a) = c("POS", "REF", "DP", paste0("Nt_", 1:(ncol(a) - 3)))
a = melt(
a, id.vars = c("POS", "REF", "DP"),
variable.factor = FALSE, value.factor = FALSE,
variable.name = "Nt", value.name = "Count"
)
a = a[which(Count != "")]
a$POS = as.numeric(a$POS)
a$DP = as.numeric(a$DP)
a$Nt = str_split_i(a$Count, "\\:", 1)
a$Count = str_split_i(a$Count, "\\:", 2) |>
as.numeric()
a$Freq = round(100 * a$Count / a$DP, digits = 6)
a = a[order(POS, -Count)]
a = a[which(REF != a$Nt & Count != 0)]
b = a[which(Nt %in% c("A", "C", "G", "T")), ]
nt_runs[[ as.character(r) ]] = b
nt_runs = rbindlist(nt_runs, idcol = "Run")
pos_of_interest = nt_runs[which(Freq == 100)]$POS |> unique()
gt_runs = nt_runs[which(POS %in% pos_of_interest)]
a <- paste0(folder, "/", merged_file , "_report.tsv") |>
readLines() |>
str_split(pattern = "\t", simplify = TRUE) |>
as.data.frame() |>
setDT()
a$V1 = NULL
# a$V3 = NULL
a$V5 = NULL
colnames(a) = c("POS", "REF", "DP", paste0("Nt_", 1:(ncol(a) - 3)))
a = melt(
a, id.vars = c("POS", "REF", "DP"),
variable.factor = FALSE, value.factor = FALSE,
variable.name = "Nt", value.name = "Count"
)
a = a[which(Count != "")]
a$POS = as.numeric(a$POS)
a$DP = as.numeric(a$DP)
a$Nt = str_split_i(a$Count, "\\:", 1)
a$Count = str_split_i(a$Count, "\\:", 2) |>
as.numeric()
a$Freq = round(100 * a$Count / a$DP, digits = 6)
a = a[order(POS, -Count)]
a = a[which(REF != a$Nt & Count != 0)]
b = a[which(Nt %in% c("A", "C", "G", "T")), ]
merged_gt1 <- merge(b, gt_runs, by = c("POS", "REF", "Nt")) #ΝEW!!!!!!!
View(merged_gt1)
View(a)
View(b)
View(b)
source("R/libraries.R")
#runs = c(1,2,3,4,5,6,7,8,9,10)
folder = "D:/sfragkoul/Synth_Data/Synthesizers/NEAT/testing/TP53/coverage_test/300_30_10"
merged_file = "Merged"
nt_runs = list()
BiocManager::install()
source("R/libraries.R")
#runs = c(1,2,3,4,5,6,7,8,9,10)
folder = "D:/sfragkoul/Synth_Data/Synthesizers/NEAT/testing/TP53/coverage_test/300_30_10"
merged_file = "Merged"
nt_runs = list()
r=1
#folder = "."
#merged_file = "Merged"
a <- paste0(folder, "/", r, "/", r, "_report.tsv") |>
readLines() |>
str_split(pattern = "\t", simplify = TRUE) |>
as.data.frame() |>
setDT()
View(a)
View(a)
a$V1 = NULL
View(a)
# a$V3 = NULL
a$V5 = NULL
paste0("Nt_", 1:(ncol(a) - 3)
)
paste0("Nt_", 1:(ncol(a) - 3))
View(a)
colnames(a) = c("POS", "REF", "DP", paste0("Nt_", 1:(ncol(a) - 3)))
a = melt(
a, id.vars = c("POS", "REF", "DP"),
variable.factor = FALSE, value.factor = FALSE,
variable.name = "Nt", value.name = "Count"
)
View(a)
a[which(POS==51),]
a = a[which(Count != "")]
a$POS = as.numeric(a$POS)
a$DP = as.numeric(a$DP)
a$Nt = str_split_i(a$Count, "\\:", 1)
?str_split_i()
a$Nt = str_split_i(a$Count, "\\:", 1)
a$Nt = str_split_i(a$Count, "\\:", 1)
a$Count = str_split_i(a$Count, "\\:", 2) |>
as.numeric()
a$Freq = round(100 * a$Count / a$DP, digits = 6)
a = a[order(POS, -Count)]
a = a[which(REF != a$Nt & Count != 0)]
View(a)
b = a[which(Nt %in% c("A", "C", "G", "T")), ]
View(b)
unique(b$Nt)
nt_runs[[ as.character(r) ]] = b
View(nt_runs)
View(nt_runs)
r=2
#folder = "."
#merged_file = "Merged"
a <- paste0(folder, "/", r, "/", r, "_report.tsv") |>
readLines() |>
str_split(pattern = "\t", simplify = TRUE) |>
as.data.frame() |>
setDT()
a$V1 = NULL
# a$V3 = NULL
a$V5 = NULL
colnames(a) = c("POS", "REF", "DP", paste0("Nt_", 1:(ncol(a) - 3)))
a = melt(
a, id.vars = c("POS", "REF", "DP"),
variable.factor = FALSE, value.factor = FALSE,
variable.name = "Nt", value.name = "Count"
)
a = a[which(Count != "")]
a$POS = as.numeric(a$POS)
a$DP = as.numeric(a$DP)
a$Nt = str_split_i(a$Count, "\\:", 1)
a$Count = str_split_i(a$Count, "\\:", 2) |>
as.numeric()
a$Freq = round(100 * a$Count / a$DP, digits = 6)
a = a[order(POS, -Count)]
a = a[which(REF != a$Nt & Count != 0)]
b = a[which(Nt %in% c("A", "C", "G", "T")), ]
nt_runs[[ as.character(r) ]] = b
View(nt_runs)
nt_runs = rbindlist(nt_runs, idcol = "Run")
unique(nt_runs$Freq)
which(nt_runs$Freq==100)
pos_of_interest = nt_runs[which(Freq == 100)]$POS |> unique()
pos_of_interest
nt_runs$POS==890
pos_of_interest = nt_runs[which(nt_runs$Freq==100)]$POS |> unique()
pos_of_interest
sort(pos_of_interest)
pos_of_interest = nt_runs[which(Freq == 100)]$POS |> unique()
View(a)
gt_runs = nt_runs[which(POS %in% pos_of_interest)]
View(gt_runs)
View(nt_runs)
View(gt_runs)
gt_runs = gt_runs[which(Freq != "100")]
View(gt_runs)
gt_runs = nt_runs[which(POS %in% pos_of_interest)]
gt_runs = gt_runs[which(Freq = "100")]
gt_runs = gt_runs[which(Freq == "100")]
View(gt_runs)
gt_runs = nt_runs[which(POS %in% pos_of_interest)]
View(gt_runs)
gt_runs = gt_runs[which(Freq == "100.000000")]
gt_runs = gt_runs[which(Freq == "100")]
gt_runs = nt_runs[which(POS %in% pos_of_interest)]
gt_runs = gt_runs[which(Freq == "100")]
View(gt_runs)
gt_runs = nt_runs[which(POS %in% pos_of_interest)]
a <- paste0(folder, "/", merged_file , "_report.tsv") |>
readLines() |>
str_split(pattern = "\t", simplify = TRUE) |>
as.data.frame() |>
setDT()
a$V1 = NULL
# a$V3 = NULL
a$V5 = NULL
colnames(a) = c("POS", "REF", "DP", paste0("Nt_", 1:(ncol(a) - 3)))
a = melt(
a, id.vars = c("POS", "REF", "DP"),
variable.factor = FALSE, value.factor = FALSE,
variable.name = "Nt", value.name = "Count"
)
a = a[which(Count != "")]
a$POS = as.numeric(a$POS)
a$DP = as.numeric(a$DP)
a$Nt = str_split_i(a$Count, "\\:", 1)
a$Count = str_split_i(a$Count, "\\:", 2) |>
as.numeric()
a$Freq = round(100 * a$Count / a$DP, digits = 6)
a = a[order(POS, -Count)]
a = a[which(REF != a$Nt & Count != 0)]
b = a[which(Nt %in% c("A", "C", "G", "T")), ]
View(gt_runs)
merged_gt = b[which(POS %in% gt_runs$POS)]
merged_gt1 <- merge(b, gt_runs, by = c("POS", "REF", "Nt")) #ΝEW!!!!!!!
View(merged_gt)
View(merged_gt1)
gt_runs = gt_runs[which(Freq == "100")] !!!NEW
gt_runs = gt_runs[which(Freq == "100")] #!!!NEW
View(gt_runs)
merged_gt = b[which(POS %in% gt_runs$POS)]
View(merged_gt)
merged_gt1 <- merge(b, gt_runs, by = c("POS", "REF", "Nt")) #ΝEW!!!!!!!
View(merged_gt)
View(merged_gt1)
#merged_gt = b[which(POS %in% gt_runs$POS)]
merged_gt <- merge(b, gt_runs, by = c("POS", "REF", "Nt")) #ΝEW!!!!!!!
rm(merged_gt1)
merged_gt = merged_gt[order(POS)]
View(merged_gt)
colnames(merged_gt)
install.packages("curl")
BiocManager::install()
