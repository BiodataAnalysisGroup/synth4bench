BiocManager::install()
runs=10
folder = "D:\sfragkoul\Synth_Data\Synthesizers\NEAT\testing\TP53\read_length\1000_100"
merged_file = "Merged"
folder = "/mnt/d/sfragkoul/Synth_Data/Synthesizers/NEAT/testing/TP53/read_length/1000_100"
merged_file = "Merged"
nt_runs = list()
for(r in runs) {
a <- paste0(folder, "/", r, "/", r, "_report.tsv") |>
readLines() |>
str_split(pattern = "\t", simplify = TRUE) |>
as.data.frame() |>
setDT()
a$V1 = NULL
# a$V3 = NULL
a$V5 = NULL
colnames(a) = c("POS", "REF", "DP", paste0("Nt_", 1:(ncol(a) - 3)))
a = melt(
a, id.vars = c("POS", "REF", "DP"),
variable.factor = FALSE, value.factor = FALSE,
variable.name = "Nt", value.name = "Count"
)
a = a[which(Count != "")]
a$POS = as.numeric(a$POS)
a$DP = as.numeric(a$DP)
a$Nt = str_split_i(a$Count, "\\:", 1)
a$Count = str_split_i(a$Count, "\\:", 2) |>
as.numeric()
a$Freq = round(100 * a$Count / a$DP, digits = 6)
a = a[order(POS, -Count)]
a = a[which(REF != a$Nt & Count != 0)]
b = a[which(Nt %in% c("A", "C", "G", "T")), ]
nt_runs[[ as.character(r) ]] = b
}
source(R/libraries.R)
source(libraries.R)
source("libraries.R")
runs=10
folder = "/mnt/d/sfragkoul/Synth_Data/Synthesizers/NEAT/testing/TP53/read_length/1000_100"
merged_file = "Merged"
nt_runs = list()
for(r in runs) {
a <- paste0(folder, "/", r, "/", r, "_report.tsv") |>
readLines() |>
str_split(pattern = "\t", simplify = TRUE) |>
as.data.frame() |>
setDT()
a$V1 = NULL
# a$V3 = NULL
a$V5 = NULL
colnames(a) = c("POS", "REF", "DP", paste0("Nt_", 1:(ncol(a) - 3)))
a = melt(
a, id.vars = c("POS", "REF", "DP"),
variable.factor = FALSE, value.factor = FALSE,
variable.name = "Nt", value.name = "Count"
)
a = a[which(Count != "")]
a$POS = as.numeric(a$POS)
a$DP = as.numeric(a$DP)
a$Nt = str_split_i(a$Count, "\\:", 1)
a$Count = str_split_i(a$Count, "\\:", 2) |>
as.numeric()
a$Freq = round(100 * a$Count / a$DP, digits = 6)
a = a[order(POS, -Count)]
a = a[which(REF != a$Nt & Count != 0)]
b = a[which(Nt %in% c("A", "C", "G", "T")), ]
nt_runs[[ as.character(r) ]] = b
}
folder = "/d/sfragkoul/Synth_Data/Synthesizers/NEAT/testing/TP53/read_length/1000_100"
for(r in runs) {
a <- paste0(folder, "/", r, "/", r, "_report.tsv") |>
readLines() |>
str_split(pattern = "\t", simplify = TRUE) |>
as.data.frame() |>
setDT()
a$V1 = NULL
# a$V3 = NULL
a$V5 = NULL
colnames(a) = c("POS", "REF", "DP", paste0("Nt_", 1:(ncol(a) - 3)))
a = melt(
a, id.vars = c("POS", "REF", "DP"),
variable.factor = FALSE, value.factor = FALSE,
variable.name = "Nt", value.name = "Count"
)
a = a[which(Count != "")]
a$POS = as.numeric(a$POS)
a$DP = as.numeric(a$DP)
a$Nt = str_split_i(a$Count, "\\:", 1)
a$Count = str_split_i(a$Count, "\\:", 2) |>
as.numeric()
a$Freq = round(100 * a$Count / a$DP, digits = 6)
a = a[order(POS, -Count)]
a = a[which(REF != a$Nt & Count != 0)]
b = a[which(Nt %in% c("A", "C", "G", "T")), ]
nt_runs[[ as.character(r) ]] = b
}
r=1
a <- paste0(folder, "/", r, "/", r, "_report.tsv") |>
readLines() |>
str_split(pattern = "\t", simplify = TRUE) |>
as.data.frame() |>
setDT()
setwd("D:/sfragkoul/Synth_Data/Synthesizers/NEAT/testing/TP53/read_length/1000_100")
setwd("C:/Users/sfragkoul/Desktop/synth4bench")
source("libraries.R")
source("R/libraries.R")
runs=10
folder = "D:/sfragkoul/Synth_Data/Synthesizers/NEAT/testing/TP53/read_length/1000_100"
merged_file = "Merged"
nt_runs = list()
r=1
a <- paste0(folder, "/", r, "/", r, "_report.tsv") |>
readLines() |>
str_split(pattern = "\t", simplify = TRUE) |>
as.data.frame() |>
setDT()
a$V1 = NULL
# a$V3 = NULL
a$V5 = NULL
colnames(a) = c("POS", "REF", "DP", paste0("Nt_", 1:(ncol(a) - 3)))
a = melt(
a, id.vars = c("POS", "REF", "DP"),
variable.factor = FALSE, value.factor = FALSE,
variable.name = "Nt", value.name = "Count"
)
a = a[which(Count != "")]
a$POS = as.numeric(a$POS)
a$DP = as.numeric(a$DP)
a$Nt = str_split_i(a$Count, "\\:", 1)
a$Count = str_split_i(a$Count, "\\:", 2) |>
as.numeric()
a$Freq = round(100 * a$Count / a$DP, digits = 6)
a = a[order(POS, -Count)]
a = a[which(REF != a$Nt & Count != 0)]
b = a[which(Nt %in% c("A", "C", "G", "T")), ]
nt_runs[[ as.character(r) ]] = b
runs=c(1, 2, 3,4,5,6,7,8,9,10)
for(r in runs) {
a <- paste0(folder, "/", r, "/", r, "_report.tsv") |>
readLines() |>
str_split(pattern = "\t", simplify = TRUE) |>
as.data.frame() |>
setDT()
a$V1 = NULL
# a$V3 = NULL
a$V5 = NULL
colnames(a) = c("POS", "REF", "DP", paste0("Nt_", 1:(ncol(a) - 3)))
a = melt(
a, id.vars = c("POS", "REF", "DP"),
variable.factor = FALSE, value.factor = FALSE,
variable.name = "Nt", value.name = "Count"
)
a = a[which(Count != "")]
a$POS = as.numeric(a$POS)
a$DP = as.numeric(a$DP)
a$Nt = str_split_i(a$Count, "\\:", 1)
a$Count = str_split_i(a$Count, "\\:", 2) |>
as.numeric()
a$Freq = round(100 * a$Count / a$DP, digits = 6)
a = a[order(POS, -Count)]
a = a[which(REF != a$Nt & Count != 0)]
b = a[which(Nt %in% c("A", "C", "G", "T")), ]
nt_runs[[ as.character(r) ]] = b
}
for(r in runs) {
print(r)
a <- paste0(folder, "/", r, "/", r, "_report.tsv") |>
readLines() |>
str_split(pattern = "\t", simplify = TRUE) |>
as.data.frame() |>
setDT()
a$V1 = NULL
# a$V3 = NULL
a$V5 = NULL
colnames(a) = c("POS", "REF", "DP", paste0("Nt_", 1:(ncol(a) - 3)))
a = melt(
a, id.vars = c("POS", "REF", "DP"),
variable.factor = FALSE, value.factor = FALSE,
variable.name = "Nt", value.name = "Count"
)
a = a[which(Count != "")]
a$POS = as.numeric(a$POS)
a$DP = as.numeric(a$DP)
a$Nt = str_split_i(a$Count, "\\:", 1)
a$Count = str_split_i(a$Count, "\\:", 2) |>
as.numeric()
a$Freq = round(100 * a$Count / a$DP, digits = 6)
a = a[order(POS, -Count)]
a = a[which(REF != a$Nt & Count != 0)]
b = a[which(Nt %in% c("A", "C", "G", "T")), ]
nt_runs[[ as.character(r) ]] = b
}
